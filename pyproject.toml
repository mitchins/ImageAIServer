[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "imageaiserver"
version = "1.0.0"
description = "Privacy-focused AI inference server with ONNX models for vision, chat, and face analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Mitchell Currie", email = "mitchell@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.95.0",
    "uvicorn>=0.22.0",
    "pydantic>=2.0.0",
    "numpy>=1.23.0",
    "pillow>=9.0.0",
    "requests>=2.28.0",
    "python-multipart>=0.0.5",
    "onnxruntime>=1.15.0",
    "huggingface_hub>=0.17.0",
    "transformers>=4.30.0",
    "insightface>=0.7.0",
    "opencv-python>=4.5.0",
    "sentencepiece>=0.1.99",
    "optimum>=1.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/mitchins/ImageAIServer"
Documentation = "https://github.com/mitchins/ImageAIServer"
Repository = "https://github.com/mitchins/ImageAIServer"
Issues = "https://github.com/mitchins/ImageAIServer/issues"

[project.scripts]
imageaiserver = "imageai_server.__main__:main"

[tool.setuptools]
packages = ["imageai_server", "imageai_server.shared", "imageai_server.multimodal_chat", "imageai_server.face_api", "imageai_server.manage_api", "imageai_server.face_server", "imageai_server.chat_server"]

[tool.setuptools.package-data]
"*" = ["*.html", "*.js", "*.css"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
asyncio_default_fixture_loop_scope = "function"